{
	"Azure string parameter": {
		"prefix": "name: string",
		"body": [
			"name: ${1:FOO}",
			"  displayName: ${2:WHAT IS FOO}",
			"  type: string",
			"  default: ${3:DEFAULT STRING}"
		]
	},
	"Azure string parameter with options": {
		"prefix": "name: stringWithOptions",
		"body": [
			"name: ${1:FOO}",
			"  displayName: ${2:WHAT IS FOO}",
			"  type: string",
			"  default: ${3:DEFAULT STRING}",
			"  values:",
			"    - ${4:OPTION1}",
			"    - ${5:OPTION2}"
		]
	},
	"Azure boolean parameter": {
		"prefix": "name: boolean",
		"body": [
			"name: ${1:FOO}",
			"  displayName: ${2:WHAT IS FOO}",
			"  type: boolean",
			"  default: ${3:DEFAULT BOOL}"
		]
	},
	"Azure Artifactory Generic Download": {
		"prefix": "task: artifactoryGenericDownload",
		"body": [
			"task: ArtifactoryGenericDownload@3",
			"  inputs:",
			"    connection: '${1:pkg@staging}'",
			"    specSource: 'taskConfiguration'",
			"    fileSpec: |",
			"      {",
			"        \"files\": [",
			"          {",
			"            \"pattern\": \"${2:global-staging-generic-virtual/kuka/YOUR_ARTIFACT}\",",
			"            \"target\": \"$(Agent.TempDirectory)\",",
			"          }",
			"        ]",
			"      }",
			"    collectBuildInfo: true",
			"    buildName: '$(Build.DefinitionName)'",
			"    buildNumber: '$(Build.BuildNumber)'",
			"    failNoOp: true",
			"  displayName: Download Depencies From Artifactory"
		]
	},
	"Azure Artifactory Generic Upload": {
		"prefix": "task: artifactoryGenericUpload",
		"body": [
			"task: ArtifactoryGenericUpload@2",
			"  inputs:",
			"    artifactoryService: '${1:pkg@staging}'",
			"    specSource: 'taskConfiguration'",
			"    fileSpec: >",
			"      {",
			"        \"files\": [",
			"          {",
			"            \"pattern\": \"${2:$(Build.ArtifactStagingDirectory)/*.zip}\",",
			"            \"target\": \"${3:kuka-staging-generic-local/YOUR_PATH}\"",
			"          }",
			"        ]",
			"      }",
			"    failNoOp: true",
			"  displayName: Upload to Artifactory"
		]
	},
	"Azure Docker login": {
		"prefix": "task: dockerLogin",
		"body": [
			"task: Docker@2",
			"  inputs:",
			"    containerRegistry: \"${1:pkg-docker@staging}\"",
			"    command: \"login\"",
			"  displayName: \"Docker login\""
		]
	},
	"Azure Docker build task": {
		"prefix": "task: dockerBuild",
		"body": [
			"task: Docker@2",
			"  inputs:",
			"    containerRegistry: \"${0:pkg-docker@staging}\"",
			"    command: \"build\"",
			"    tags: \"${1:latest}\"",
			"    arguments: ${2:-t YOUR_IMAGE}",
			"    Dockerfile: 'Dockerfile'",
			"  displayName: \"Docker build\""
		]
	},
	"Azure Docker build script": {
		"prefix": "script: dockerBuild",
		"body": [
			"script: |",
			"    docker build \\",
			"      --network=host \\",
			"      --platform=linux/amd64 \\",
			"      -t ${1:DOCKER_IMAGE_NAME} \\",
			"      -f ${2:Dockerfile} \\",
			"      .",
			"  displayName: Docker build"
		]
	},
	"Azure Docker run": {
		"prefix": "script: dockerRun",
		"body": [
			"script: |",
			"  docker run \\",
			"    --rm \\",
			"    --network=host \\",
			"    --platform=linux/amd64 \\",
			"    -v $(Build.SourcesDirectory):/workspaces/$(Build.Repository.Name) \\",
			"    -v $(Build.ArtifactStagingDirectory):/artifact \\",
			"    --workdir /workspaces/$(Build.Repository.Name) \\",
			"    ${1:DOCKER_IMAGE_NAME} \\",
			"    ${2:YOUR_COMMAND} \\",
			"  displayName: Docker run"
		]
	},
	"Azure Docker exec": {
		"prefix": "script: dockerExec",
		"body": [
			"script: |",
			"  docker exec --workdir /workspaces/$(Build.Repository.Name) ${1:DOCKER_CONTAINER_NAME} ${2:YOUR_COMMAND}",
			"  displayName: ${3:Docker exec}"
		]
	},
	"Azure Docker remove": {
		"prefix": "script: dockerRm",
		"body": [
			"script: docker rm --force ${1:DOCKER_CONTAINER_NAME}",
			"  displayName: Stop and remove container",
			"  condition: always()"
		]
	},
	"Azure Publish Build Artifacts": {
		"prefix": "task: publishBuildArtifacts",
		"body": [
			"task: PublishBuildArtifacts@1",
			"  displayName: \"Publish Artifact: $(Build.Repository.Name)\"",
			"  inputs:",
			"    PathToPublish: ${1:$(Build.ArtifactStagingDirectory)}",
			"    ArtifactName: $(Build.Repository.Name)"
		]
	},
	"Azure Debug Condition": {
		"prefix": "considtion: debug",
		"body": "condition: or(variables['system.debug'], variables['queue.debug'], variables['agent.diagnostic'])"
	},
	"Azure Debug Task": {
		"prefix": "script: debug",
		"body": [
			"script: ${1:YOUR SCRIPT}",
			"  displayName: 'DEBUG: ${2:DISPLAY NAME}'",
			"  condition: or(variables['system.debug'], variables['queue.debug'], variables['agent.diagnostic'])"
		]
	},
	"Azure Set Variable": {
		"prefix": "bash: setvar",
		"body": [
			"bash: |",
			"    echo \"##vso[task.setvariable variable=${1:VARNAME}]${2:VALUE}\"",
			"  displayName: 'Create variable ${1:VARNAME}'"
		]
	}
}
